Changes made to branch 4.16 on 2017/07/21:


- BP_GFire01:
	
	P_Projectile scale changed from 36 to 50
	Added a grow phase.
	VolumeDetector is now child of the Root.

- BP_MotionController:

	Removed on Event Hit a new cast to GFire01. Release is now deal by the MotionControllerPawn.
	Added a function called "ReleaseAdvancedAttack". This function checks if there is an advanced attack active, if so cast it.
	Add a varaible ActiveAdvanceAttack => type AdvandeAttack.

- MotionControllerPawn:

	Added a new event TryToReleaseAdvanceAttack. This event is called after releasing the input button for finish recognition on the right hand.	
	CastGFire01 macro now attatch the fire attack to the right hand.
	
- BP_MPMotionController:

	Removed on Event Hit a new cast to GFire01. Release is now deal by the MotionControllerPawn.
	Added a function called "ReleaseAdvancedAttack". This function checks if there is an advanced attack active, if so cast it.
	Add a varaible ActiveAdvanceAttack => type AdvandeAttack and set as RepNotify.
	OnRep_ActiveAdvanceAttack. Attach the spell to the hand at the attack spawn point


- MPMotionControllerPawn:

	Added a new event TryToReleaseAdvanceAttack a server only RPC. This event is called after releasing the input button for finish recognition on the right hand.	
	CastGFire01 macro sets ActiveAdvanceAttack. The attatch is make by the RepNotify.

=======================================================================================================================
Changes made to branch 4.16 on 2017/07/20:

General:

	Added two new particle system for the advance attacks

- MPMotionControllerPawn:

	Added macro CastGFire01
	Added macro CastGWater01

- BP_MPMotionController:

	Added on Event Hit a new cast to GFire01

- BP_HandTrackGesture:

	Using the VR camera location insted of VROriring on the macro GetUnitVectorFromHeadToHand

- BP_MotionControllerTutorial:

	Added an Event linked to a Set Timer to verify when an advanced attack is activate.
 

=======================================================================================================================
Changes made to branch 4.16 on 2017/07/19:

General:
	
	New advance attack GFire01. It can be activate dragging both hands backwards, close to each other in a straight line (Like a kamehameka). 
	New advance attack GWater01. It can be activate with both hands from righ to left with the right hand and from left to right with the left hand.
	Added a new blueprint called BP_WaterProjectile used by GWater01


- MotionControllerPawn:
	
	Added macro CastGFire01
	Added macro CastGWater01

- BP_MotionController:

	Added on Event Hit a new cast to GFire01


=======================================================================================================================
Changes made to branch 4.16 on 2017/07/18:

General:
	
	New advance attack GAir01. It can be activate moving both hands from top to down in a straight line.
	New recorded file for advance air attack included.


- MotionControllerPawn:
	
	Added the function CastBarrier that substitute the functions for each barrier. As soon as the Barriers are casted in the same way there is no need for diferent functions.
	Added macro CastGAir01

- MPMotionControllerPawn: 

	Implemented the BPI_SpellRules.
	Added the function CastBarrier that substitute the functions for each barrier. As soon as the Barriers are casted in the same way there is no need for diferent functions. 
	Added macro CastGAir01.
 
- AIEnemy_BP:

	Implemented the BPI_SpellRules 
	Removed barrier counts from the OnComponentBeginOverlap and OnComponentEndOverlap, now this is done by the interface BPI_SpellRules at the events AddBarrier and RemoveBarrier


=======================================================================================================================
Changes made to branch 4.16 on 2017/07/17:

Note: Carlos changes on 2017/07/15 fixed inssues with the wind shield rotation and deactivation of spells when finishes the motion recognition for advanced attacks.  


General:

	Added a macro on the library called WhichPlayerIs, that checks if the actor enter parameter is a single player, mutiplayer or AI. This macro can be accessed by any BP.

	Added BPI_SpellRules with 2 events and 1 function 

- MotionControllerPawn: 

	Basic Attacks check IsNotInSilenceMode on release button before execute node. Avoid player to get out from silence mode.
	Inclued an IsNotInSilenceMode check before starts vibrating the controls on cast barriers.
	Implemented the BPI_SpellRules 

- MPMotionControllerPawn: 

	Inclued an IsNotInSilenceMode check before starts vibrating the controls on cast barriers.


- BP_BasicAttacks:

	On GetAccelerationFromBaseSpeed the slope parameter was changed from 0.00095 to 0.00045. This makes the spell to curve more its trajectory for the new max speed.

- BP_Barrier: 

	Substitute the macro OwnerIsAPlayer by the macro on library WhichPlayerIs 
	Added a check to see if player has more than two barriers casted. PS: Before implement the interface to all players it may lead to erros.

=======================================================================================================================
Changes made to branch 4.16 on 2017/07/14:

- MPMotionControllerPawn:
	
	When active spell is no valid, when trying to release the attack, it deactivate and sets the cast status to none. Before, it wasn't setting status to none and barrier couldn't grow after the attack got destryed on your hand. 
	Added an arrow that is child of Mask. If arrow is a child of the Camera it is not being replicate...wierd. 
	The arrorw is used now to cast the AdvanceAttack on the macro CastGEarth01. Before I was using the camera, but for some dark reason it doesn't work when Rift is the Client.

- MotionControllerPawn:
	
	When active spell is no valid, when trying to release the attack, it deactivate and sets the cast status to none. Before, it wasn't setting status to none and barrier couldn't grow after the attack got destryed on your hand. 


- BP_BasicAttacks:

	On the macro isPlayerHand when the two is valid fails the last returns false. This fix inssues on sinlge player when the AI shots.  

=======================================================================================================================
Changes made to branch 4.16 on 2017/07/13:


General:

- MutiplayerMap: removed fog from the map 

- MPMotionControllerPawn:

	Included in the end of BeginPlay at "Set initial Conditions" comment box, a check if is locally controlled, if true change the deafault position of the health bar.
	
	
- BP_MPMotionController:

	Removed shake hand function from Activate Spell.
	Inclued interface to take damage. Now hands take half of the total damage.

- BP_Shield:

	Shield deacrese size from 0.7 to 0.5 in x and y scale.

- BP_BasicAttacks:

	Increased size from 0.15 to 0.25
	Base damage increase to 60

- BP_AdvancedAttacks:

	Increased size from 0.15 to 0.25
	Base damage increase to 60

=======================================================================================================================
Changes made to branch 4.16 on 2017/07/12:


General:

- FightArena level BP: Added a node on GameOver event to deactivate spells.


Blueprint classes:

- MPMotionControllerPawn:

	ServerEndMatch is now a server only RPC.
	Added a new function to deactivate the spells in both hands. 
	Event to vibrate control is not a multicast RPC anymore and it's called on the input event for each controller. 
	Macro added to check which device the player is using, and also check if controller is valid.

- MotionControllerPawn:

	Added a new function to deactivate the spells in both hands.  

- BP_Barrier:

	Added SwitchHasAuthority on BeginPlay. This avoid the client to run it again and turn the barrier back.
		
- BP_BasicAttacks:
	
	Parameter MaxAllowSpeed set as defaut value of 1500. For Balance.
	Macro ChangeFireEffect deleted. No longer necessary. 

- BP_Shield: 

	The event SetOffSet is now running on server. This fix the air shield to be castted facing a wrong direction

- BP_MPMotionController: 

	Event Hit now uses isllocaly controller instead of SwitchHasAuthority

- BP_AdvancedAttacks:

	CastAdvancedAttack is now a server only RPC
=========================================================================================================================
Changes made to branch 4.16 on 2017/07/11:


General:

	New interface implemented: BPI_IsVRPlayer. This interface is now used by MPMotionControllerPawn and MotionControllerPawn. It has two functions GetVROring and GetVRCamera. This is been used now by the BP_HandTrackGesture.


Maps: 

	On the Level NonVRMainMenu the GameModeOverride is now: GameMode in World Settings. This avoid this level to spwan a VR Player as default.

	Inclued a BlockingVolume on the floor in the Multiplayer map 

	

Blueprint classes:

- MPMotionControllerPawn:

	Added a node SwicthOnDevice in the Barrier input node on left and rigth.
	Interface IsVRPlayer implemented

- MotionControllerPawn:

	Interface IsVRPlayer implemented

- BP_HandTrackGesture:

	Included a Cast node to BP_MPMotionController at the BeginPlay event. 
	The Function GetUnitaryVectorFromHeadToHand is now Protected and Pure. It now uses the interface to cumpute the direction from HMD to Hand and no longer uses Cast to get the VROrigin.

- BP_AdvancedAttacks:

	OwnerHands array, is an actor type now, and works for both, singleplayer or multiplayer. 

- LevelBlueprint MultiplayerLevel:

	Inclued an experimental node for change the view for recording propouse. 

========================================================================================================================
Changes made to branch 4.16 on 2017/07/10:


Blueprint classes: 

- BP_BasicAttacks: 

	Min net update Frequence set to 100. This also is necessary to replicate well the attacks trajectory, othewise it's choppy. 
	Scale con the timeline now changes with a Multicast Custom Event, ClientSetScale. 
	Cast Attack is now as in the previus multiplayer version. Gets Veocity direction and factor on the client and pass this information to the Server trought an event call FireBasicAttack. This makes the casting on the client much better.	

========================================================================================================================
Changes made to branch 4.16 on 2017/07/06:


IMPORTANT NOTE: The Local test in VR using only one HMD works very well. The HMD only sees the server camera. 

Note: On single HMD test Server-Client move each other hands and head. However, it's all fine with two HMDs.

General:

	- Added the Command Line "Stereo On" at the multiplayer Map.

Blueprint classes:

- MPMotionControllerPawn:

	Fixed bug on MotionControllerR component: Parameter Hand set as Right (instead of Left).
	Spawn Hands now use SwitchHasAuthority, instead of IsLocallyControlled. 
	Small delay (1sec) added before call SetInitialConditions. This fix the references on the Left Controller and Right Controller parameter. Before this references were none for the player2.  
	PlayerBody was Toggle true on Rendering Owner No See.
	A meshe call Mask was add as a child of PlayerBody. This mashe holds the mask.
	Cleaned the thick event.
	Changed function SetInitialConditions; initial elements are set in the function. This now works because hands are spawn with SwitchHasAuthority and a small delay was added to wait BP_MPMotionController to make its setup. 
	New Macro IsInSilenceMode add. Unfinish on MotionControllerPawn

- BP_MPMotionController: 

	Enum parameter Hand is now replicated. This makes the hand mesh invert correclty and both hand meshes
are correct in the client now. 
  ===============================================================================================================
Changes made to branch 4.16 on 2017/07/05:


General:
Changed the names from: 
	*Multiplayer_MotionControllerPawn to MPMotionControllerPawn
	*Multiplayer_BP_MotionController to BP_MPMotionController 
	*Include the chinesseMask on the project.
	*Clened the version from not used assets (3.15GB) to 1.32GB.
	*Multiplayer level added to SwitchLevels


Blueprint classes:

- BP_MPMotionController: 

	*Removed the MotionController component

- MPMotionControllerPawn: 

	*Include nodes (Deactivate any spell if active.). This destroy shield or basic attacks if activate after the player sucessufully finish a cast for an advanced attack. 

	*Pawn now spawn BP_MPMotionController instead of BP_MotionController.

	*Left Controller parameter changed from BP_MotionControler to BP_MPMotionController. 

- BP_BasicAttack:

	*Added reference to MPMotionControllerPawn

- BP_Shield:

	*Added reference to MPMotionControllerPawn

- BP_Barrier:

	*Added reference to MPMotionControllerPawn


 

