Changes made to branch SteamMatchmaking on 2017/11/01:

Note: this is a branch specific change log; this way when merging these changes can be chronologically added correctly and avoids merge mismatches in these files.

Blueprint classes:
- BP_SteamGameInstance:
      Added variables:
        Default:
            IsVR_NotActive => boolean (determines if we are using a menu which is VR friedly or not; default = false)
      Modified all events Show<some menu>Menu to take a boolean IsNotVR which determines if the widget should be added to viewport or not (adds it if true).
      Added a note for Thiago regarding the important FName variables inherited from USteamGameInstance that are exposed to BP.

- MPMotionControllerPawn:
      Added overrided input event for D key; calls the BP_SteamGameInstance event DetroySessionCaller to destroy the session from the multiplayer match (this is for testing only).

Maps:
- NoVR_MainMenu:
      Modified overrided event BeginPlay; now also sets BP_SteamGameInstance variable IsVR_NotActive to true.

===================================================================================================================================================================
Changes made to branch SteamMatchmaking on 2017/10/31:

Note: this is a branch specific change log; this way when merging these changes can be chronologically added correctly and avoids merge mismatches in these files.

General:
- Added C++ header files SteamGameInstance.h and MainMenu.h; SteamGameInstance.h contains dynamic multicast delegates, the struct FCustomBPSessionResult and the class USteamGameInstance.

- Added blueprint class BP_SteamGameInstance, derived from C++ class USteamGameInstance.

- Added blueprint widget class QuickMatchMenu.

- Added matchmaking functionality to the game (note: while a QuickMatchMenu was added, it is not functional and prone to breaking; matchmaking functionality was 
  added to blueprint widget class ServerMenu)

- Modified how the game quits; now it clean whatever sessions still exist before quitting.

- Added LobbyRoom and associated Lobby_GM and Dummy_BP blueprint classes

C++ classes:
- USteamGameInstance: check wiki for description

C++ structs:
- FCustomBPSearchResult: (Blueprint type)
      Added variables:
        Public:
          Not exposed to BP:
              SessionResultInternal => FOnlineSessionSearchResult session search result      

Maps:
- LoadingMap:
      Modified overrided event BeginPlay; the GameInstance class used now is BP_SteamGameInstance.

- NoVR_MainMenu:
      Modified overrided event BeginPlay; the GameInstance class used now is BP_SteamGameInstance.

Blueprint classes:
- Lobby_GM: functionality almost identical to MultiplayerGM; this is so players in the LobbyRoom can move to the match correctly, using the functionality already in place.
      Modified event SetPlayerTarget; while in MultiplayerGM this event sets the opposite pawn as the target, in this class it sets a Dummy_BP as the target.
      Modified event InProgressEvent; while in MultiplayerGM this event begins the countdown timer and calls the multicast rpc ClientStartMatch, from 
       MPMotionControllerPawn, this class just calls the rpc.

- Dummy_BP: only implements the GetTargetComponent from the BPI_IsTargetable blueprint interface.

- BP_SteamGameInstance:
      Added variables:
        Server Settings:
            EnableLan => Boolean (default = true)
            IsPresence => boolean (determines if steam uses lobby os server sessions; default = true; uses lobby then)
            MaxPlayers => Integer (default = 2)
        Widgets:
            MainMenuWB => MainMenu blueprint widget
            HostMenuWB => HostMenu blueprint widget
            ServerMenuWB => ServerMenu blueprint widget
            ServerRowWB => ServerRow blueprint widget
            LoadingScreenWB => LoadingScreen blueprint widget
            QuickMatchMenuWB => QuickMatchMenu blueprint widget
            ErrorDialogWB => ErrorDialog blueprint widget
            CurrentWB => User widget (parent to all widgets; used to correct a bug when displaying the error or loading screens)
      Added events to display each of the new blueprint widget classes.
      Added macro DisplayErrorMessage which displays ErrorDialog widget and sets the error message.
      Added HostMatchEvent event which creates a multiplayer session.
      Added JoinServer which joins a created session.
      Overrided NetworkError from GameInstance; handles network errors.
      Overrided TravelError from GameInstance; handles travel errors.
      Added NetErrorToText pure function to get network error code and create a text out of it.
      Added TravelErrorToText pure function to get travel error code and create a text out of it.

Blueprint widgets:
- QuickMatchMenu: not working and not used at the moment so no description necessary.

- MainMenu:
      Added variables:
        Default:
            IsLanEnabled => boolean (determines if the host button is enabled; default = false)
            QuickMatchButton => UMG Button
      Modified variables:
        Default:
            HostButton: now is bound to IsLanEnabled and disabled if lan is not used
      Added overrided event OnClicked for QuickMatchButton; removes whatever widget is on the viewport and calls the BP_SteamGameInstance event to display the QuickMatchMenu blueprint widget.
      Modified overrided event Construct; now the GameInstance class is cast to BP_SteamGameInstance.
      Modified overrided event OnClicked for QuitButton; now it sets the USteamGameInstance variable bIsQuitting (inherited by BP_SteamGameInstance) to true and call 
       the DestroySessionCaller event from BP_SteamGameInstance; this makes sure that only after all sessions are destroyed the game quits (not sure if it is 
       needed but feels safer this way).
      Modified overrided event OnCLicked for ToggleLanButton; now it also sets IsLanEnabled to the same value as BP_SteamGameInstance variable EnableLan when pressed.

- HostMenu:
      Modified overrided event Construct; now the GameInstance class is cast to BP_SteamGameInstance.
      Modified overrided event OnTextChanged for UserNameServer; it is active now.

- WBP_GameOver:
      Modified overrided event OnClicked for Button1; the GameInstance is now casted to BP_SteamGameInstance; also sets USteamGameInstance variable MainMenuMapName to 
       SwitchLevels and call DestroySessionCaller from BP_SteamGameInstance; this makes sure that when leaving the multiplayer match, the session is destroyed.
      Modified overrided event OnClicked for Button2; the GameInstance is now casted to BP_SteamGameInstance.

- ServerRow:
      Modified variables:
        Default:
            SearchResults: now it is of type CustomBPSessionResult 
        Modified function GetPing; now uses the USteamGameInstance static accessor GetPingInMs for FCustomBPSessionResult struct.
        Modified fucntion GetServerName; now uses the USteamGameInstance static accessor GetSessionName for FCustomBPSessionResult struct.
        Modified function GetPlayerCount; now uses the USteamGameInstance static accessors GetCurrentPlayers and GetMaxPlayers for FCustomBPSessionResult struct; 
         also creates the PlayerCounts text directly.
        Modified function SetServerSearchResults; now just sets SearchResults to the CustomBPSessionResult passed to this function.
        Modified overrided event OnClicked for ServerSelectionButton; the GameInstance is now casted to BP_SteamGameInstance and the USteamGameInstance variable GameSessionName 
         is set to the reult of a call to USteamGameInstance static accessor GetSessionName.

- ServerMenu:
      Modified variables:
        Default:
            FoundSessions: now it is of type CustomBPSessionResult        
      Modified how finding sessions is done; now the process is fully automated, in other words, matchmaking v1.0 is done.
      Added event SetFailMessage, bound to USteamGameInstance delegate OnfindSessionsNotSuccessful; this event sets StatusText to a fail to find session message 
       and calls BP_SteamGameInstance event HostGameEvent.
      Added event DisplaySessions, bound to USteamGameInstance delegate OnfindSessionsSuccessful; this event adds ServerRow buttons to the server list.
      Modified overrided event Construct; now first binds the USteamGameInstance delegates OnfindSessionsSuccessful and OnfindSessionsNotSuccessful before calling macro RefreshServers.
      Modified overrided event OnClicked for BackButton; the GameInstance is now casted to BP_SteamGameInstance; also the USteamGameInstance delegates OnfindSessionsSuccessful and 
       OnfindSessionsNotSuccessful before removing this widget from the viewport and displaying NoVR_MainMenu.
      Modified macro RefreshServers; now it only tries to find sessions, the process of adding them to the list is done by the event DisplaySessions.
